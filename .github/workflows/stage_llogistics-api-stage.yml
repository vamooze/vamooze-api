# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - llogistics-api-stage

on:
  push:
    branches:
      - stage
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HOSTNAME: localhost
      PORT: 8080
      AUTH_SECRET_KEY: 4aTLYHRaqHVtCxLCtbKZH7p4ykT2eEWa
      APP_URL: https://llogistics-api-stage.azurewebsites.net
      AUTH_ALGORITHM: HS256
      AUTH_EXPIRES_IN: 1y
      AUTH_MODEL: users
      AUTH_SERVICE: user
      DEFAULT_PAGINATION_LIMIT: 10
      MAXIMUM_PAGINATION_LIMIT: 50
      USERNAME_FIELD: email
      PASSWORD_FIELD: password
      DB_URL: postgres://vamooze:Vmooz$321@loystar-logisticsdb-stage.postgres.database.azure.com/vamoozedb
      DB_CLIENT: pg
      MAILCHIMP_API_KEY: md-TslttMDAJO4IyHFLN6Kwbw
      AZURE_STORAGE_CONNECTION_STRING: 'DefaultEndpointsProtocol=https;AccountName=vmzestore;AccountKey=kxKCnchRpGH4XoXhBTVjKNG0r/Ka4FTias7o1rAIMV3Z+6TUjDENZFYA2nFUH1En0//A5oev/7ih+AStBGF+cQ==;EndpointSuffix=core.windows.net'
      AZURE_STORAGE_CONTAINER_NAME: asset-images
      TERMII_API_KEY: TLUYaEK1P8WxnOPDhjqa1EoZa8ri8MRZDfW2kPNZmmBsePHDKJrnjpusUjJx4b
      TERMII_BASE_URL: api.ng.termii.com
      PHONE_STRATEGY_USERNAME_FIELD: 'phone_number'
      PHONE_STRATEGY_PASSWORD_FIELD: 'password'
      TEST_DB_URL: postgres://postgres:postgres@localhost:5432/vamooze_test
      AZURE_EMAIL_CONNECTION_STRING: endpoint=https://vcomms-server.europe.communication.azure.com/;accesskey=AlJjmTM7mqcBoKjv2TgIQ5HSKWH6akgpjsXAIUz4vACeioDLkxCPJQQJ99AHACULyCpPAdxRAAAAAZCSXTqg
      AZURE_EMAIL_SENDER_ADDRESS: DoNotReply@301d8549-a2df-4860-ae70-f9ecbc2d3cf1.azurecomm.net
      GOOGLEDIRECTIONKEY: AIzaSyBAcpKW5cka27LaRVudbAh9vBoHAPVa7N8
      ONESIGNAL_APP_ID: baa2421e-d56f-4068-8259-5c97d1fd486d
      ONESIGNAL_TOKEN: MWI0MTM3YjctYmZhOS00MDFhLTlkMDMtZGYyZTA5YzMyOGMx
      REDIS_HOST:logistics-redis.redis.cache.windows.net
      REDIS_PORT:6380
      REDIS_PASSWORD:C5dESXwCwOpLD7wmaMRqRhETSRXrDN7uEAzCaOiRiAo=
      REDIS_SSL:true

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run compile --if-present
          npm run migrate
          npm run seed

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      HOSTNAME: localhost
      PORT: 8080
      AUTH_SECRET_KEY: 4aTLYHRaqHVtCxLCtbKZH7p4ykT2eEWa
      APP_URL: https://llogistics-api-stage.azurewebsites.net
      AUTH_ALGORITHM: HS256
      AUTH_EXPIRES_IN: 1y
      AUTH_MODEL: users
      AUTH_SERVICE: user
      DEFAULT_PAGINATION_LIMIT: 10
      MAXIMUM_PAGINATION_LIMIT: 50
      USERNAME_FIELD: email
      PASSWORD_FIELD: password
      DB_URL: postgres://vamooze:Vmooz$321@loystar-logisticsdb-stage.postgres.database.azure.com/vamoozedb
      DB_CLIENT: pg
      MAILCHIMP_API_KEY: md-TslttMDAJO4IyHFLN6Kwbw
      AZURE_STORAGE_CONNECTION_STRING: 'DefaultEndpointsProtocol=https;AccountName=vmzestore;AccountKey=kxKCnchRpGH4XoXhBTVjKNG0r/Ka4FTias7o1rAIMV3Z+6TUjDENZFYA2nFUH1En0//A5oev/7ih+AStBGF+cQ==;EndpointSuffix=core.windows.net'
      AZURE_STORAGE_CONTAINER_NAME: asset-images
      TERMII_API_KEY: TLUYaEK1P8WxnOPDhjqa1EoZa8ri8MRZDfW2kPNZmmBsePHDKJrnjpusUjJx4b
      TERMII_BASE_URL: api.ng.termii.com
      PHONE_STRATEGY_USERNAME_FIELD: 'phone_number'
      PHONE_STRATEGY_PASSWORD_FIELD: 'password'
      TEST_DB_URL: postgres://postgres:postgres@localhost:5432/vamooze_test
      AZURE_EMAIL_CONNECTION_STRING: endpoint=https://vcomms-server.europe.communication.azure.com/;accesskey=AlJjmTM7mqcBoKjv2TgIQ5HSKWH6akgpjsXAIUz4vACeioDLkxCPJQQJ99AHACULyCpPAdxRAAAAAZCSXTqg
      AZURE_EMAIL_SENDER_ADDRESS: DoNotReply@301d8549-a2df-4860-ae70-f9ecbc2d3cf1.azurecomm.net
      GOOGLEDIRECTIONKEY: AIzaSyBAcpKW5cka27LaRVudbAh9vBoHAPVa7N8 
      ONESIGNAL_APP_ID: baa2421e-d56f-4068-8259-5c97d1fd486d
      ONESIGNAL_TOKEN: MWI0MTM3YjctYmZhOS00MDFhLTlkMDMtZGYyZTA5YzMyOGMx
      REDIS_HOST:logistics-redis.redis.cache.windows.net
      REDIS_PORT:6380
      REDIS_PASSWORD:C5dESXwCwOpLD7wmaMRqRhETSRXrDN7uEAzCaOiRiAo=
      REDIS_SSL:true
  
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B412623A093D44C18E7C6602E8D5CE48 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4FC5EC1C6E0B4771A0BA49806A996B37 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_882839B732B64CB493C44CF4BE14275C }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'llogistics-api-stage'
          slot-name: 'Production'
          package: .
          
